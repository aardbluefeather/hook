<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<muclient>
<plugin
   name="HooK_MiniEpics"
   author="BlueFeather"
   id="2a0221da142c2505699c5adb"
   language="Lua"
   purpose="Mini epic (Titan/Terra) triggers and reports"
   save_state="y"
   date_written="2019-06-26 21:47:01"
   requires="5.06"
   version="0.1"
   >
<description trim="y">
<![CDATA[
A collection of triggers for use in Titan and Terra miniepics - to make life there easier.
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <!-- TITAN -->
  <trigger match="* wears a Mighty Shield as a shield."             script="titan_shy" enabled="n" group="me_titan" keep_evaluating="y" sequence="99"></trigger>
  <trigger match="With awesome force * cleaves *'s shield in half!" script="titan_shn" enabled="n" group="me_titan" keep_evaluating="y" sequence="99"></trigger>
  <trigger match="* quaffs a potion of Sanctuary."                  script="titan_say" enabled="n" group="me_titan" keep_evaluating="y" sequence="99"></trigger>
  <trigger match="The white aura around *'s body vanishes."         script="titan_san" enabled="n" group="me_titan" keep_evaluating="y" sequence="99"></trigger>
  <!-- TERRA -->
  <trigger match="The white aura around *'s body vanishes."         script="" enabled="n" group="me_terra" keep_evaluating="y" sequence="99"></trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias match="^miniepi?c?s?$"               regexp="y" enabled="y" script="miniepics_toggle"></alias>
  <alias match="^miniepi?c?s? (gt|say|echo)$" regexp="y" enabled="y" script="miniepics_channel"></alias>
  <alias match="^miniepi?c?s? help$"          regexp="y" enabled="y" script="miniepics_help"></alias>
  <alias match="^miniepi?c?s? test$"          regexp="y" enabled="y" script="miniepics_test"></alias>
  <alias match="^miniepi?c?s? test2$"         regexp="y" enabled="y" script="miniepics_test2"></alias>
  <alias match="^miniepi?c?s? debug$"         regexp="y" enabled="y" script="miniepics_debug"></alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
-------------------
-- Helper functions
-------------------
function sb(b) if b then return 'true' else return 'false' end end
function gb(s) if s == 'true' then return true else return false end end
function PadString(str, len, char) if char == nil then char = ' ' end return string.rep(char, len - #str) .. str end
function sanitize(s) return s:gsub('[%p%c]','') end
function indexof(t, s) for k, v in ipairs(t) do if v == s then return true end end return false end
function dump(o)
  if type(o) == 'table' then
     local s = '{ '
     for k,v in pairs(o) do
        if type(k) ~= 'number' then k = '"'..k..'"' end
        s = s .. '['..k..'] = ' .. dump(v) .. ','
     end
     return s .. '} '
  else
     return tostring(o)
  end
end

-----------------
-- Default values
-----------------
require "gmcphelper"
require "serialize"
dofile(GetPluginInfo(GetPluginID(),20).."aardwolf_colors.lua")
local logo = ColoursToANSI('@Co-}@YHooK@C{-o  @x051M@x044i@x037n@x030i@x051E@x044p@x037i@x030cs @cv@C0@c.@C1')
local env_active = gb(GetVariable('env_active')) or true
local env_debug = gb(GetVariable('env_debug')) or false
local env_area = GetVariable('env_area') or 'out'
local env_chan = GetVariable('env_chan') or 'echo'
local bosstitan = { "Grakkr", "Hej", "Orzbuk", "Lugthurg", "Gjaka", "Morgak", "Durthar", "Rograg" }
local bossterra = { "Kjare", "Skeligh", "Yqath", "Vortath", "Salkin", "Nysil", "Yrelth", "Ksajus" }

------------------
-- Miniepics alias
------------------
function miniepics_toggle()
  if env_active then
    env_active = false
    SaveState()
    EnableTriggerGroup('me_titan', false) debugout('me_titan OFF')
    EnableTriggerGroup('me_terra', false) debugout('me_terra OFF')
    AnsiNote(logo..ColoursToANSI('@w miniepic triggers turned @ROFF'))
  else
    env_active = true
    SaveState()
    if gmcp('room.info.zone') == 'titan' then EnableTriggerGroup('me_titan', true) debugout('me_titan ON') end
    if gmcp('room.info.zone') == 'terra' then EnableTriggerGroup('me_terra', true) debugout('me_terra ON') end
    AnsiNote(logo..ColoursToANSI('@w miniepic triggers turned @GON'))
  end
end

function miniepics_debug()
  if env_debug then
    env_debug = false
    SaveState()
    AnsiNote(logo..ColoursToANSI('@w miniepic debugging turned @ROFF'))
  else
    env_debug = true
    SaveState()
    AnsiNote(logo..ColoursToANSI('@w miniepic debugging turned @GON'))
  end
end

function miniepics_channel(name, line, wc)
  env_chan = wc[1]
  SaveState()
  AnsiNote(logo..ColoursToANSI('@w miniepic channel set to @Y'..env_chan))
end

function miniepics_test()
  EnableTriggerGroup('me_titan', true)
  SendNoEcho("echo With awesome force Pumpkin cleaves Grakkr's shield in half!")
  SendNoEcho("echo Grakkr wears a Mighty Shield as a shield.")
  SendNoEcho("echo Grakkr quaffs a potion of Sanctuary.")
  SendNoEcho("echo The white aura around Grakkr's body vanishes.")
end

function miniepics_test2()
  EnableTriggerGroup('me_titan', true)
  -- SendNoEcho("echo With awesome force Pumpkin cleaves Grakkr's shield in half!")
  -- SendNoEcho("echo Grakkr wears a Mighty Shield as a shield.")
  -- SendNoEcho("echo Grakkr quaffs a potion of Sanctuary.")
  SendNoEcho("echo The white aura around Grakkr's body vanishes.")
end

--------------------
-- Trigger functions
--------------------
function titan_shy(name, line, wc)
  debugout('titan_shy function called, env_active is '..sb(env_active))
  if env_active then
    line = ' @R'..sanitize(wc[1])..' @Co-}@YShielded!@C{-o'
    if env_chan == 'echo' then AnsiNote(logo..ColoursToANSI(line)) end
    if env_chan == 'gt' then SendNoEcho('gt'..line) end
    if env_chan == 'say' then SendNoEcho('say'..line) end
  end
end

function titan_shn(name, line, wc)
  debugout('titan_shn function called, env_active is '..sb(env_active))
  if env_active then
    line = ' @R'..sanitize(wc[2])..' @Co-}@GShield destroyed!@C{-o @Yby '..sanitize(wc[1])
    if env_chan == 'echo' then AnsiNote(logo..ColoursToANSI(line)) end
    if env_chan == 'gt' then SendNoEcho('gt'..line) end
    if env_chan == 'say' then SendNoEcho('say'..line) end
  end
end

function titan_say(name, line, wc)
  debugout('titan_say function called, env_active is '..sb(env_active))
  if env_active then
    line = ' @R'..sanitize(wc[1]).." @Co-}@WSanc'ed!@C{-o"
    if env_chan == 'echo' then AnsiNote(logo..ColoursToANSI(line)) end
    if env_chan == 'gt' then SendNoEcho('gt'..line) end
    if env_chan == 'say' then SendNoEcho('say'..line) end
  end
end

function titan_san(name, line, wc)
  debugout('titan_san function called, env_active is '..sb(env_active))
  if env_active then
    debugout('titan_san wc[1] is: '..wc[1]..' and it returns '..sb(indexof(bosstitan, wc[1])))
    if indexof(bosstitan, wc[1]) then
      line = ' @R'..sanitize(wc[1])..' @Co-}@GDispelled sanctuary!@C{-o'
      if env_chan == 'echo' then AnsiNote(logo..ColoursToANSI(line)) end
      if env_chan == 'gt' then SendNoEcho('gt'..line) end
      if env_chan == 'say' then SendNoEcho('say'..line) end
    end
  end
end

-----------------
-- Zone awareness
-----------------
function OnPluginBroadcast(msg, id, name, text)
  if text == 'char.base' then
    Send_GMCP_Packet('request area')
    Send_GMCP_Packet('request room')
    debugout('We have reconnected, issue area/room request')
  end
  if env_active then
    -- if name ~= 'Aardwolf_Soundpack' and name ~= 'Galabans_Moons' and name ~= 'Aardwolf_GMCP_Mapper' and name ~= 'WinkleGold_Search_Destroy' and name ~= 'WinkleGold_Mapper_Extender' then
    --   debugout('msg: '..msg..', id: '..id..', name: '..name..', text: '..text) -- Ignore known broadcasts, give unknown ones
    -- end
    if name == 'GMCP_handler' then
      -- if string.match(text,'char.') then
      --   debugout(text..' received! This is what we have about it:')
      --   debugout(dump(gmcp(text)))
      -- elseif string.match(text,'room.') then
      --   debugout(text..' received! This is what we have about it:')
      --   debugout(dump(gmcp(text)))
      -- end
      if text == 'room.area' then
        debugout('room.area broadcast heard.')
        if env_active then env_triggers = '@GON' else env_triggers = '@ROFF' end
        if gmcp('room.area.id') == 'titan' then
          if env_area ~= 'titan' then
            if env_area == 'terra' then
              AnsiNote(logo..ColoursToANSI(' @Co-}@Y'..string.upper(env_area)..'@C{-o @Warea left.'))
              EnableTriggerGroup('me_terra', false)
              debugout('me_terra trigger group OFF.')
            end
            env_area = 'titan'
            EnableTriggerGroup('me_titan', true)
            debugout('me_titan trigger group ON.')
            SaveState()
            AnsiNote(logo..ColoursToANSI(' @Co-}@Y'..string.upper(env_area)..'@C{-o @Warea entered. Triggers are ['..env_triggers..'@W]'))
          end
        elseif gmcp('room.area.id') == 'terra' then
          if env_area ~= 'terra' then
            if env_area == 'titan' then
              AnsiNote(logo..ColoursToANSI(' @Co-}@Y'..string.upper(env_area)..'@C{-o @Warea left.'))
              EnableTriggerGroup('me_titan', false)
              debugout('me_titan trigger group OFF.')
            end
            env_area = 'terra'
            EnableTriggerGroup('me_terra', true)
            debugout('me_terra trigger group ON.')
            SaveState()
            AnsiNote(logo..ColoursToANSI(' @Co-}@Y'..string.upper(env_area)..'@C{-o @Warea entered. Triggers are ['..env_triggers..'@W]'))
          end
        else
          if env_area == 'titan' or env_area == 'terra' then
            AnsiNote(logo..ColoursToANSI(' @Co-}@Y'..string.upper(env_area)..'@C{-o @Warea left.'))
            env_area = 'out'
            EnableTriggerGroup('me_titan', false)
            debugout('me_titan trigger group OFF.')
            EnableTriggerGroup('me_terra', false)
            debugout('me_terra trigger group OFF.')
            SaveState()
          end
        end
      end
    end
  end
end

-------------------
-- Helpers - output
-------------------
function miniepics_help()
  AnsiNote(ColoursToANSI('@C{-o @Y----------------@C[  ')..logo..ColoursToANSI('  @C]@Y---------------- @Co-}@w'))
  AnsiNote()
  AnsiNote(ColoursToANSI('  @CCommands:'))
  AnsiNote(ColoursToANSI('    @Yminiepics        @w- switch plugin ON / OFF'))
  AnsiNote(ColoursToANSI('    @Yminiepics help   @w- this screen'))
  AnsiNote(ColoursToANSI('    @Yminiepics gt     @w- set output channel to group tell'))
  AnsiNote(ColoursToANSI('    @Yminiepics say    @w- set output channel to say'))
  AnsiNote(ColoursToANSI('    @Yminiepics echo   @w- set output channel to local echo'))
  -- AnsiNote(ColoursToANSI('    @Yminiepics debug  @w- toggle debug info'))
  AnsiNote()
  AnsiNote(ColoursToANSI('  @CUsage:'))
  AnsiNote(ColoursToANSI('    @wPlugin will autodetect your current zone and activate'))
  AnsiNote(ColoursToANSI('    @wrequired triggers that report to group channel.'))
  AnsiNote()
  AnsiNote(ColoursToANSI('@C{-o @Y---------------------------------------------------------------- @Co-}@w'))
end

function debugout(e)
  if env_debug then
    AnsiNote(logo..ColoursToANSI(' @Y[@ydebug@Y] @W'..e))
  end
end

function noteout(e)
  AnsiNote(logo..e)
end

function OnPluginInstall()
  AnsiNote(logo..ColoursToANSI('@w type @Yminiepics help @wfor commands and usage info.'))
end

function OnPluginSaveState()
  -- this will run when SaveState() is called or if mush is closing etc
  SetVariable('env_area', env_area)
  SetVariable('env_chan', env_chan)
  SetVariable('env_active', sb(env_active))
  SetVariable('env_debug', sb(env_debug))
end


]]>
</script> 

</muclient>
