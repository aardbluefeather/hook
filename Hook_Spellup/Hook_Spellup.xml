<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<muclient>
<plugin
   name="Hook_Spellup"
   author="BlueFeather"
   id="f717f9bf18936c8f9b6d2f1e"
   language="Lua"
   purpose="Automatic spellup, the pirate way"
   save_state="y"
   date_written="2019-04-14 14:59:37"
   requires="5.06"
   version="1.4"
   >
<description trim="y">
<![CDATA[
Hook_Spellup v1.4 loaded.
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <!-- need sanctuary -->
  <trigger match="Your brilliant white aura of sanctuary shimmers and is gone."                enabled="n" keep_evaluating="n" group="sanc"    send_to="12" sequence="100"><send>sanc_lost()</send></trigger>
  <trigger match="You are surrounded by a shimmering white aura of divine protection."         enabled="n" keep_evaluating="n" group="sanc"    send_to="12" sequence="100"><send>env_sanc = false</send></trigger>
  <trigger match="You are already in sanctuary."                                               enabled="n" keep_evaluating="n" group="sanc"    send_to="12" sequence="100"><send>env_sanc = false</send></trigger>
  <!-- insta cast spells -->
  <trigger match="You no longer move at the speed of light."                                   enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>Execute('c 259')</send></trigger>
  <trigger match="You feel yourself slow down."                                                enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>SendNoEcho('spellup')</send></trigger>
  <trigger match="You are no longer able to breathe underwater."                               enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>Execute('c 333')</send></trigger>
  <!-- spellup complete -->
  <trigger match="You decide to go on a serious bender. Suddenly you feel very lucky."         enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>env_cskill = false</send></trigger>
  <trigger match="You're drunk enough... Sober up first!"                                      enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>env_cskill = false</send></trigger>
  <trigger match="No spells or skills cast."                                                   enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>check_spells_combat()</send></trigger>
  <trigger match="You can't concentrate enough to cast *"                                      enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>check_spells_combat()</send></trigger>
  <trigger match="Queueing spell : *."                                                         enabled="n" keep_evaluating="n" omit_from_output="y" name="queue_spell" group="spellup" send_to="12" sequence="100" script="queue_spells"></trigger>
  <trigger match="Queueing skill : *."                                                         enabled="n" keep_evaluating="n" omit_from_output="y" name="queue_skill" group="spellup" send_to="12" sequence="100" script="queue_spells"></trigger>
  <!-- need spellup -->
  <trigger match="You lost your concentration while trying to cast *"                          enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>failed_spell()</send></trigger>
  <trigger match="Your head starts to pound as you sober up."                                  enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>need_cskill()</send></trigger>
  <trigger match="You die."                                                                    enabled="n" keep_evaluating="n" group="spellup" send_to="12" sequence="100"><send>env_spellup = true;env_cskill = true</send></trigger>
  <!-- ask for spellup -->
  <trigger match="You are no longer merged with the shadows."                                  enabled="n" keep_evaluating="n" omit_from_output="y" name="shadow_form"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer move in the shadows."                                          enabled="n" keep_evaluating="n" omit_from_output="y" name="shadows"                  group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You emerge from the shadows."                                                enabled="n" keep_evaluating="n" omit_from_output="y" name="sneak"                    group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer invisible."                                                enabled="n" keep_evaluating="n" omit_from_output="y" name="invis"                    group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your rage ebbs."                                                             enabled="n" keep_evaluating="n" omit_from_output="y" name="frenzy"                   group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your pulse slows to a normal rate."                                          enabled="n" keep_evaluating="n" omit_from_output="y" name="magical_rush"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your mental barrier breaks down."                                            enabled="n" keep_evaluating="n" omit_from_output="y" name="mental_barrier"           group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your divine swiftness slows to a halt."                                      enabled="n" keep_evaluating="n" omit_from_output="y" name="divine_swiftness"         group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your moral standing is no longer cloaked."                                   enabled="n" keep_evaluating="n" omit_from_output="y" name="grey_aura"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your intellectual fortress crumbles."                                        enabled="n" keep_evaluating="n" omit_from_output="y" name="intellect_fortress"       group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your force shield shimmers then fades away."                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="shield"                   group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your anti-magic shell disappears."                                           enabled="n" keep_evaluating="n" omit_from_output="y" name="antimagic_shell"          group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your mind feels less awake."                                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="awakening"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your inertial barrier dissipates."                                           enabled="n" keep_evaluating="n" omit_from_output="y" name="inertial_barrier"         group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your force field wavers and dissipates."                                     enabled="n" keep_evaluating="n" omit_from_output="y" name="line_of_protection"       group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your prayer of fortune weakens."                                             enabled="n" keep_evaluating="n" omit_from_output="y" name="prayer_of_fortune"        group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your magical barrier against fire shimmers and disappears."                  enabled="n" keep_evaluating="n" omit_from_output="y" name="heat_shield"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your godly embrace relaxes."                                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="godly_embrace"            group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your mystic might fades away."                                               enabled="n" keep_evaluating="n" omit_from_output="y" name="mystic_might"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your magical armor wears away."                                              enabled="n" keep_evaluating="n" omit_from_output="y" name="armor"                    group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your globe of darkness vanishes."                                            enabled="n" keep_evaluating="n" omit_from_output="y" name="darkness"                 group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your body softens."                                                          enabled="n" keep_evaluating="n" omit_from_output="y" name="harden_body"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="A momentary lapse of concentration causes your thought shield to fade away." enabled="n" keep_evaluating="n" omit_from_output="y" name="thought_shield"           group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer feel so intelligent."                                          enabled="n" keep_evaluating="n" omit_from_output="y" name="revelation"               group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer feel so huge."                                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="enhanced_strength"        group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer feel protected by the forces of shadow."                       enabled="n" keep_evaluating="n" omit_from_output="y" name="protection_good"          group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer feel enlightened."                                             enabled="n" keep_evaluating="n" omit_from_output="y" name="enlightenment"            group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer feel compressed."                                              enabled="n" keep_evaluating="n" omit_from_output="y" name="compression"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer see in the dark."                                              enabled="n" keep_evaluating="n" omit_from_output="y" name="night_vision"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer absorb magical attacks."                                       enabled="n" keep_evaluating="n" omit_from_output="y" name="absorb"                   group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You no longer absorb energy."                                                enabled="n" keep_evaluating="n" omit_from_output="y" name="energy_containment"       group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel weaker."                                                            enabled="n" keep_evaluating="n" omit_from_output="y" name="giant_strength"           group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel solid again."                                                       enabled="n" keep_evaluating="n" omit_from_output="y" name="pass_door"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel weaker as you question your faith."                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="power_of_faith"           group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel the loss of your champion's strength."                              enabled="n" keep_evaluating="n" omit_from_output="y" name="champions_strength"       group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel more vulnerable to electricity."                                    enabled="n" keep_evaluating="n" omit_from_output="y" name="shockproof"               group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel more vulnerable to disease."                                        enabled="n" keep_evaluating="n" omit_from_output="y" name="vaccinate"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel more vulnerable to cold."                                           enabled="n" keep_evaluating="n" omit_from_output="y" name="warmth"                   group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel more vulnerable to acid."                                           enabled="n" keep_evaluating="n" omit_from_output="y" name="acidproof"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel more vulnerable as the spirits leave your side."                    enabled="n" keep_evaluating="n" omit_from_output="y" name="spirit_shield"            group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less righteous as the blessing upon you fades."                     enabled="n" keep_evaluating="n" omit_from_output="y" name="bless"                    group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less resistant to poison."                                          enabled="n" keep_evaluating="n" omit_from_output="y" name="toxic_resistance"         group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less resistant to light and holy attacks."                          enabled="n" keep_evaluating="n" omit_from_output="y" name="holy_mirror"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less protected."                                                    enabled="n" keep_evaluating="n" omit_from_output="y" name="aid"                      group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less protected from destructive energies."                          enabled="n" keep_evaluating="n" omit_from_output="y" name="energy_shield"            group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less perceptive."                                                   enabled="n" keep_evaluating="n" omit_from_output="y" name="perception"               group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less holy."                                                         enabled="n" keep_evaluating="n" omit_from_output="y" name="holy_aura"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel less in control of your will."                                      enabled="n" keep_evaluating="n" omit_from_output="y" name="willpower"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You feel almost blind at the loss of your magical sight."                    enabled="n" keep_evaluating="n" omit_from_output="y" name="true_seeing"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You can no longer sense anger."                                              enabled="n" keep_evaluating="n" omit_from_output="y" name="sense_anger"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You can no longer avoid some attacks."                                       enabled="n" keep_evaluating="n" omit_from_output="y" name="avoidance"                group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer surrounded by your party shield."                          enabled="n" keep_evaluating="n" omit_from_output="y" name="party_shield"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer quite so calculating."                                     enabled="n" keep_evaluating="n" omit_from_output="y" name="calculation"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer in harmony with yourself."                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="self_harmony"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer displaced."                                                enabled="n" keep_evaluating="n" omit_from_output="y" name="displacement"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer channelling energy."                                       enabled="n" keep_evaluating="n" omit_from_output="y" name="channel_energy"           group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer blurred."                                                  enabled="n" keep_evaluating="n" omit_from_output="y" name="blur"                     group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="The texture of your skin returns to normal."                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="flesh_armor"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="The magic circle around you shimmers and fades away."                        enabled="n" keep_evaluating="n" omit_from_output="y" name="magic_circle"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="The bark surrounding your skin peels away, leaving you more vulnerable."     enabled="n" keep_evaluating="n" omit_from_output="y" name="barkskin"                 group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="The aura around your body fades away."                                       enabled="n" keep_evaluating="n" omit_from_output="y" name="indestructible_aura"      group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="The adrenaline rush wears off."                                              enabled="n" keep_evaluating="n" omit_from_output="y" name="adrenaline_control"       group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You are no longer manipulating time."                                        enabled="n" keep_evaluating="n" omit_from_output="y" name="timeshifting"             group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your globe of invulnerability shimmers and fades."                           enabled="n" keep_evaluating="n" omit_from_output="y" name="globe_of_invulnerability" group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your battle sense has faded."                                                enabled="n" keep_evaluating="n" omit_from_output="y" name="combat_mind"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger> 
  <trigger match="Your mental abilities feel less balanced."                                   enabled="n" keep_evaluating="n" omit_from_output="y" name="mental_balance"           group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="Your skin feels soft again."                                                 enabled="n" keep_evaluating="n" omit_from_output="y" name="stone_skin"               group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You slowly float to the ground."                                             enabled="n" keep_evaluating="n" omit_from_output="y" name="fly"                      group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="You return to the living world."                                             enabled="n" keep_evaluating="n" omit_from_output="y" name="wraith_form"              group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <trigger match="## You may now use projection abilities."                                    enabled="n" keep_evaluating="n" omit_from_output="y" name="power_projection"         group="spellup" send_to="12" sequence="100" script="need_spells"></trigger>
  <!-- warn about afflix and pvp -->
  <trigger match="You are trapped in an invisible web!"                                        enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100"><send>issue_warning('web1', '')</send></trigger>
  <trigger match="You start to feel unlucky."                                                  enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100"><send>issue_warning('curse', '')</send></trigger>
  <trigger match="You feel as if you are being watched."                                       enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100"><send>issue_warning('scry1', '')</send></trigger>
  <trigger match="* strengthens the web holding you."                                          enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100"><send>issue_warning('web2', '%1')</send></trigger>
  <trigger match="You sense that * is scrying you."                                            enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100"><send>issue_warning('scry2', '%1')</send></trigger>
  <trigger match="^\*\* (.+) can now take revenge on you for \d+ minutes\.$"                   enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100" regexp="y"><send>issue_warning('revenge1', '%1')</send></trigger>
  <trigger match="^\*\* You can take revenge on (.+) for \d+ minutes\.$"                       enabled="n" keep_evaluating="n" group="warning" send_to="12" sequence="100" regexp="y"><send>issue_warning('revenge2', '%1')</send></trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias match="^ss$" regexp="y" enabled="y" send_to="12" sequence="100"><send>env_init = false;give_spellup()</send></alias>
  <alias match="^ss test$" regexp="y" enabled="y" send_to="12" sequence="100"><send>give_spellup();SendNoEcho('echo Your brilliant white aura of sanctuary shimmers and is gone.')</send></alias>
  <alias match="^ss auto$" regexp="y" enabled="y" send_to="12" sequence="100"><send>toggle_spellup()</send></alias>
  <alias match="^ss sanc$" regexp="y" enabled="y" send_to="12" sequence="100"><send>toggle_sanctuary()</send></alias>
  <alias match="^ss warn$" regexp="y" enabled="y" send_to="12" sequence="100"><send>toggle_warning()</send></alias>
  <alias match="^ss debug$" regexp="y" enabled="y" send_to="12" sequence="100"><send>toggle_debug()</send></alias>
  <alias match="^ss warn (.*)$" regexp="y" enabled="y" send_to="12" sequence="100"><send>setup_warning('%1')</send></alias>
  <alias match="^ss sanc reset$" regexp="y" enabled="y" send_to="12" sequence="100"><send>env_sanc = true;env_sanc_m = false;sanc_reset()</send></alias>
  <alias match="^ss help$" regexp="y" enabled="y" send_to="12" sequence="100"><send>autospellup_help()</send></alias>
  <alias match="^ss (aura1|aura2|bag1|bag2) (\d+)$" regexp="y" enabled="y" send_to="12" sequence="100"><send>setup_autosanc('%1', '%2')</send></alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
require "mw_theme_base"
require "serialize"
require "movewindow"
require "commas"
require "gmcphelper"
require "copytable"

-- pull in telnet option handling
dofile(GetPluginInfo(GetPluginID(),20).."telnet_options.lua")
-- functions for handling Aardwolf color codes
dofile(GetPluginInfo(GetPluginID(),20).."aardwolf_colors.lua")

-- set all color codes for AnsiNote
local c_bright = ANSI(1)
local c_dark = ANSI(22)
local c_red = ANSI(31)
local c_green = ANSI(32)
local c_yellow = ANSI(33)
local c_blue = ANSI(34)
local c_magenta = ANSI(35)
local c_cyan = ANSI(36)
local c_white = ANSI(37)
-- set script name for later use
local logo = ColoursToANSI('@Co-}@YHooK@C{-o @Y[@x051Au@x044t@x037oS@x030p@x037el@x044l@x051up@Y] @cv@C1@c.@C4')
local logoshort = ColoursToANSI('@Y[@x051Au@x044t@x037oS@x030p@x037el@x044l@x051up@Y]')

-------------------
-- Helper functions
-------------------
function sb(b) if b then return 'true' else return 'false' end end
function gb(s) if s == 'true' then return true else return false end end
function PadString(str, len, char) if char == nil then char = ' ' end return string.rep(char, len - #str) .. str end
function dump(o)
  if type(o) == 'table' then
     local s = '{ '
     for k,v in pairs(o) do
        if type(k) ~= 'number' then k = '"'..k..'"' end
        s = s .. '['..k..'] = ' .. dump(v) .. ','
     end
     return s .. '} '
  else
     return tostring(o)
  end
end

-----------------
-- Default values
-----------------
env_active  = gb(GetVariable('env_active')) or false -- is autocasting active? No by default, save choice across sessions
env_active2 = gb(GetVariable('env_active2')) or false -- is auto sanctuary monitoring active? No by default, save choice across sessions
env_active3 = gb(GetVariable('env_active3')) or false -- is warning report active? No by default, save choice across sessions
env_debug   = gb(GetVariable('env_debug')) or false -- debug output, to keep track on what's triggered when
env_init    = false -- has plugin been initialized (synced with server)
env_sanc    = false -- do we need sanctuary?
env_sanc_m  = false -- do we need to manually reset sanctuary?
env_cskill  = false -- do we need clan skill recast?
env_spellup = false -- do we need spellup?
env_casting = false -- is spellup already been cast? (sometimes we can spam too much, make sure we don't)
sanc_aura1  = GetVariable('sanc_aura1') or '1' -- clan or some other aura
sanc_aura2  = GetVariable('sanc_aura2') or '2' -- aura that gives sanctuary
sanc_bag1   = GetVariable('sanc_bag1') or '1' -- container for aura1
sanc_bag2   = GetVariable('sanc_bag2') or '2' -- container for aura2
warn_chan   = GetVariable('warn_chan') or 'gt' -- default channel for warnings
player_stat = '1' -- gmcp('char.status.state')
env_gag     = false -- dial down the spam from the screen if needed

------------------------
-- Main trigger function
------------------------
function OnPluginBroadcast(msg, id, name, text)
  if env_active then -- only do something if the script is active
    if (id == '3e7dedbe37e44942dd46d264') then
      if text == 'char.status' then
        if player_stat ~= gmcp('char.status.state') then
          if gmcp('char.status.state') == '3' then
            if player_stat == '12' then -- After speedwalk
              debugout('char.status.state - After speedwalk -> give_spellup()')
              give_spellup()
            elseif player_stat == '8' then -- After combat
              debugout('char.status.state - After combat -> sanc_reset(); give_spellup()')
              sanc_reset()
              give_spellup()
            elseif player_stat == '4' then -- After AFK
              debugout('char.status.state - After AFK -> give_spellup()')
              give_spellup()
            elseif player_stat == '9' then -- After Sleep
              debugout('char.status.state - After Sleep -> give_spellup()')
              give_spellup()
            elseif player_stat == '11' then -- After Resting or Sitting
              debugout('char.status.state - After Resting or Sitting -> give_spellup()')
              give_spellup()
            elseif player_stat == '5' or player_stat == '6' or player_stat == '7' then -- After Note or Build or Paged Output
              debugout('char.status.state -- After Note or Build or Paged Output -> env_init = false; give_spellup()')
              env_init = false
              give_spellup()
            end
          end
          player_stat = gmcp('char.status.state')
        end
      elseif text == 'char.stats' then
        -- give_spellup() -- this gets called when we power/level up, might be in combat, so ignore
      elseif text == 'comm.tick' then
        if gmcp('char.status.state') == '3' then
          debugout('comm.tick - Out of Combat -> give_spellup()')
          give_spellup() -- act on ticks only out of combat!
        elseif gmcp('char.status.state') == '4' then
          debugout('comm.tick - AFK -> give_spellup()')
          give_spellup() -- act on ticks only while AFK!
        elseif gmcp('char.status.state') == '9' then
          debugout('comm.tick - Sleeping -> give_spellup()')
          give_spellup() -- act on ticks only while sleeping!
        elseif gmcp('char.status.state') == '11' then
          debugout('comm.tick - Resting -> give_spellup()')
          give_spellup() -- act on ticks only while resting!
        end
      end
    end
    -- Listen to GAG options
    if id == '40d90f1d52244dfd57c79bab' then
      -- msg = 11 -- definiran arg[0] u BroadcastPlugin()
      -- id = 40d90f1d52244dfd57c79bab -- id plugina
      -- name = WarsEnchantBot -- name plugina
      -- text = gagON -- definiran arg[1] u BroadcastPlugin()
      if text == 'gagON' then
        env_gag = true
        debugout('Cought broadcast gagON')
        debugout('msg: '..dump(msg))
        debugout('id: '..dump(id))
        debugout('name: '..dump(name))
        debugout('text: '..dump(text))
      elseif text == 'gagOFF' then
        env_gag = false
        debugout('Cought broadcast gagOFF')
        debugout('msg: '..dump(msg))
        debugout('id: '..dump(id))
        debugout('name: '..dump(name))
        debugout('text: '..dump(text))
      end
    end
  end
end

--------------------
-- Autospellup alias
--------------------
function toggle_spellup()
  if env_active then
    env_active = false
    SetVariable('env_active', sb(env_active))
    EnableTriggerGroup('spellup', false)
    AnsiNote(logoshort..ColoursToANSI('@w script turned @ROFF'))
  else
    env_init = false
    env_active = true
    SetVariable('env_active', sb(env_active))
    EnableTriggerGroup('spellup', true)
    AnsiNote(logoshort..ColoursToANSI('@w script turned @GON'))
  end
end

function toggle_sanctuary()
  if env_active2 then
    env_active2 = false
    SetVariable('env_active2', sb(env_active2))
    EnableTriggerGroup('sanc', false)
    AnsiNote(logoshort..ColoursToANSI('@w sanctuary watching turned @ROFF'))
  else
    env_active2 = true
    SetVariable('env_active2', sb(env_active2))
    EnableTriggerGroup('sanc', true)
    AnsiNote(logoshort..ColoursToANSI('@w sanctuary watching turned @GON'))
  end
end

function toggle_warning()
  if env_active3 then
    env_active3 = false
    SetVariable('env_active3', sb(env_active3))
    EnableTriggerGroup('warning', false)
    AnsiNote(logoshort..ColoursToANSI('@w sanctuary watching turned @ROFF'))
  else
    env_active3 = true
    SetVariable('env_active3', sb(env_active3))
    EnableTriggerGroup('warning', true)
    AnsiNote(logoshort..ColoursToANSI('@w sanctuary watching turned @GON'))
  end
end

function toggle_debug()
  if env_debug then
    env_debug = false
    SetVariable('env_debug', sb(env_debug))
    AnsiNote(logoshort..ColoursToANSI('@w debug output turned @ROFF'))
  else
    env_debug = true
    SetVariable('env_debug', sb(env_debug))
    AnsiNote(logoshort..ColoursToANSI('@w debug output turned @GON'))
  end
end

--------------------
-- Autospellup alias
--------------------
function need_spells(name, line, wc)
  -- name = splp08
  -- line = Your moral standing is no longer cloaked.
  -- wc = { [0] = "Your moral standing is no longer cloaked." } 
  if not env_spellup then
    env_spellup = true
    if gmcp('char.status.state') == '3' then debugout('Need spells trigger - Out of Combat -> give_spellup()') give_spellup() end
  end
  if not env_gag then writeout(line) end
  debugout(name:gsub('_',' ')..' @w--> @roff!')
end

function queue_spells(name, line, wc)
  env_spellup = false
  if not env_gag then writeout(line) end
  if env_gag then debugout('Gagging line: @w'..line) end
end

function failed_spell()
  if gmcp('char.status.state') == '3' then env_spellup = true end
end

function need_cskill()
  env_cskill = true
  if gmcp('char.status.state') == '3' then debugout('Need cskill trigger - Out of Combat -> give_spellup()') give_spellup() end
end

function check_spells_combat() -- If we get "No spells or skills cast." while in combat
  if gmcp('char.status.state') == '3' then
    env_spellup = false
  else
    env_spellup = true
  end
end

------------------------
-- Main spellup function
------------------------
function give_spellup()
  if not env_init then -- only on first start/reload
    env_spellup = true
    env_cskill = true
    env_init = true
    if env_active then EnableTriggerGroup('spellup', true) end
    if env_active2 then EnableTriggerGroup('sanc', true) end
    if env_active3 then EnableTriggerGroup('warning', true) end
  end
  local char_state = false
  if gmcp('char.status.state') == '3' then char_state = 3 end -- Fully active and able to receive MUD commands
  if gmcp('char.status.state') == '4' then char_state = 4 end -- AFK
  -- if gmcp('char.status.state') == '5' then char_state = 5 end -- in Note
  -- if gmcp('char.status.state') == '6' then char_state = 6 end -- in Building/Edit mode
  -- if gmcp('char.status.state') == '7' then char_state = 7 end -- at paged output prompt
  -- if gmcp('char.status.state') == '8' then char_state = 8 end -- in combat
  if gmcp('char.status.state') == '9' then char_state = 9 end -- sleeping
  if gmcp('char.status.state') == '11' then char_state = 11 end -- resting or sitting
  -- if gmcp('char.status.state') == '12' then char_state = 12 end -- running
  -- if not char_state then debugout('Autospellup debug: '..gmcp('char.status.state'))
  if env_active or env_spellup or env_cskill or char_state then
    if not env_casting then
      if char_state and char_state == 4 and (env_cskill or env_spellup) then debugout('--> afk') SendNoEcho('afk') end
      if char_state and char_state > 4 and (env_cskill or env_spellup) then debugout('--> stand') SendNoEcho('stand') end
      if env_cskill then debugout('--> stupor') SendNoEcho('stupor') end
      if env_spellup then debugout('--> spellup') SendNoEcho('spellup') end
      if char_state == 4 and (env_cskill or env_spellup) then debugout('--> afk') SendNoEcho('afk') end
      if char_state == 9 and (env_cskill or env_spellup) then debugout('--> sleep') SendNoEcho('sleep') end
      if char_state == 11 and (env_cskill or env_spellup) then debugout('--> rest') SendNoEcho('rest') end
      if env_cskill or env_spellup then env_casting = true; DoAfterSpecial(2,"env_casting = false",12) end
    end
  end
end

function sanc_lost()
  if gmcp('char.status.state') == '8' or env_sanc_m then
    env_sanc = true
    if (sanc_bag2 ~= '0') then SendNoEcho('get '..sanc_aura2..' '..sanc_bag2) end -- disable if bag2 == 0
    SendNoEcho('wear '..sanc_aura2)
    if (sanc_bag1 ~= '0') then SendNoEcho('put '..sanc_aura1..' '..sanc_bag1) end -- disable if bag1 == 0
  else
    env_sanc = true
    Execute('c 71')
    DoAfterSpecial(6,"check_sanc()",12) -- check if we are in sanc after 2 sec
  end
end

function sanc_reset()
  if env_sanc and not env_sanc_m then
    if gmcp('char.status.state') == '3' then
      if (sanc_bag1 ~= '0') then SendNoEcho('get '..sanc_aura1..' '..sanc_bag1) end -- disable if bag1 == 0
      SendNoEcho('wear '..sanc_aura1) -- switch back the aura
      SendNoEcho('c 71') -- cast sanctuary
      if (sanc_bag2 ~= '0') then SendNoEcho('put '..sanc_aura2..' '..sanc_bag2) end -- disable if bag2 == 0
      -- env_sanc will be set off with trigger because this may fail if we are stunned!
      DoAfterSpecial(6,"check_sanc()",12) -- check if we are in sanc after 2 sec
    end
  end
end

function check_sanc()
  if env_sanc and not env_sanc_m then
    env_sanc_m = true
    AnsiNote(ColoursToANSI('@C{-o @Y---------------@C[  ')..logo..ColoursToANSI('  @C]@Y--------------- @Co-}@w'))
    AnsiNote()
    AnsiNote(ColoursToANSI('  @CNotice:'))
    AnsiNote(ColoursToANSI('    @wUnable to cast sanctuary, you can do it later manually:'))
    AnsiNote(ColoursToANSI('    @w - @Yss sanc reset'))
    AnsiNote()
    AnsiNote(ColoursToANSI('@C{-o @Y----------------------------------------------------------------- @Co-}@w'))
    sanc_lost()
  end
end

function setup_autosanc(i, j)
  if i == 'aura1' then
    sanc_aura1 = j
    SetVariable('sanc_aura1', sanc_aura1)
    AnsiNote(logoshort..ColoursToANSI('@w sanc_aura1 set to: @G'..sanc_aura1))
  elseif i == 'aura2' then
    sanc_aura2 = j
    SetVariable('sanc_aura2', sanc_aura2)
    AnsiNote(logoshort..ColoursToANSI('@w sanc_aura2 set to: @G'..sanc_aura2))
  elseif i == 'bag1' then
    sanc_bag1 = j
    SetVariable('sanc_bag1', sanc_bag1)
    AnsiNote(logoshort..ColoursToANSI('@w sanc_bag1 set to: @G'..sanc_bag1))
  elseif i == 'bag2' then
    sanc_bag2 = j
    SetVariable('sanc_bag2', sanc_bag2)
    AnsiNote(logoshort..ColoursToANSI('@w sanc_bag2 set to: @G'..sanc_bag2))
  end
end

------------------------------
-- Warnings for pvp and afflix
------------------------------
function issue_warning(what, who)
  if what == 'web1' then         warn_message = '@Co-} @R>>@YWEBBED@R<< @C{-o $CI am caught in a web!!'
  elseif what == 'curse' then    warn_message = '@Co-} @R>>@YCURSED@R<< @C{-o $CI have been cursed!!'
  elseif what == 'scry1' then    warn_message = '@Co-} @R>>@YSCRY@R<< @C{-o $CSomeone is scrying me!!'
  elseif what == 'web2' then     warn_message = '@Co-} @R>>@YWEBBED@R<< @C{-o @M'..who..'$C strengthens the web holding me!'
  elseif what == 'scry2' then    warn_message = '@Co-} @R>>@YSCRY@R<< @C{-o @M'..who..'$C is scrying me!!'
  elseif what == 'revenge1' then warn_message = '@Co-} @R>>@YREVENGE@R<< @C{-o @M'..who..'$C has revenge on me for @M15 $Cminutes!'
  elseif what == 'revenge2' then warn_message = '@Co-} @R>>@YREVENGE@R<< @C{-o $CI can now take revenge on @M'..who..'$C for @M15 $Cminutes!' end
  if warn_chan == 'local' then
    AnsiNote(logoshort..' '..ColoursToANSI(string.gsub(warn_message,'$C','@W')))
  else
    Send(warn_chan..' '..warn_message)
  end
end

function setup_warning(c)
  if c == 'gt' or c == 'ct' or c == 'repl' or c == 'say' or c == 'spouse' or c == 'local' then
    warn_chan = c
    SetVariable('warn_chan', warn_chan)
    AnsiNote(logoshort..ColoursToANSI('@w channel set to: @Y'..warn_chan))
  else
    AnsiNote(logoshort..ColoursToANSI('@w accepted arguments are: @Ygt@w, @Yct@w, @Yrepl@w, @Ysay@w, @Yspouse@w, @Ylocal@w.'))
  end
end

-------------------
-- Helpers - output
-------------------
function autospellup_help()
  AnsiNote(ColoursToANSI('@C{-o @Y---------------@C[  ')..logo..ColoursToANSI('  @C]@Y--------------- @Co-}@w'))
  AnsiNote()
  AnsiNote(ColoursToANSI('  @CCommands:'))
  AnsiNote(ColoursToANSI('    @Yss             @w- alias for manual spellup'))
  if env_active then
    AnsiNote(ColoursToANSI('    @Yss auto        @w- toggle auto spellup.           Now: [ @GON @w]'))
  else
    AnsiNote(ColoursToANSI('    @Yss auto        @w- toggle auto spellup.           Now: [ @ROFF @w]'))
  end
  if env_active2 then
    AnsiNote(ColoursToANSI('    @Yss sanc        @w- toggle auto aura switching.    Now: [ @GON @w]'))
  else
    AnsiNote(ColoursToANSI('    @Yss sanc        @w- toggle auto aura switching.    Now: [ @ROFF @w]'))
  end
  if env_active3 then
    AnsiNote(ColoursToANSI('    @Yss warn        @w- toggle auto warnings. (pvp)    Now: [ @GON @w]'))
  else
    AnsiNote(ColoursToANSI('    @Yss warn        @w- toggle auto warnings. (pvp)    Now: [ @ROFF @w]'))
  end
  if env_debug then
    AnsiNote(ColoursToANSI('    @Yss debug       @w- toggle debug info.             Now: [ @GON @w]'))
  else
    AnsiNote(ColoursToANSI('    @Yss debug       @w- toggle debug info.             Now: [ @ROFF @w]'))
  end
  AnsiNote(ColoursToANSI('    @Yss help        @w- this screen'))
  AnsiNote(ColoursToANSI('    @Yss sanc reset  @w- manually reset sanctuary aura if needed'))
  AnsiNote(ColoursToANSI('    @Yss warn <chan> @w- set output to channel          Now: @Y'..warn_chan))
  AnsiNote(ColoursToANSI('    @Yss aura1 <num> @w- set non sanc aura id to <num>'))
  AnsiNote(ColoursToANSI('    @Yss aura2 <num> @w- set sanctuary aura id to <num>'))
  AnsiNote(ColoursToANSI('    @Yss bag1 <num>  @w- set bag for non sanc aura id to <num>'))
  AnsiNote(ColoursToANSI('    @Yss bag2 <num>  @w- set bag for sanctuary aura id to <num>'))
  AnsiNote()
  AnsiNote(ColoursToANSI('  @CUsage:'))
  AnsiNote(ColoursToANSI('    @wSet your aura1, aura2 and the containers you keep them in'))
  AnsiNote(ColoursToANSI('    @wto their ID numbers. It will automatically trigger if in'))
  AnsiNote(ColoursToANSI('    @wcombat and keep you safe!'))
  AnsiNote(ColoursToANSI('    @wTo @Cnot @wuse bag1 or bag2, set it to zero: "@Yss bag1 0@w"'))
   AnsiNote()
  AnsiNote(ColoursToANSI('  @CSaved:'))
  AnsiNote(ColoursToANSI('    @Y  non sanctuary aura ID:         @W')..PadString(sanc_aura1,16))
  AnsiNote(ColoursToANSI('    @Y  bag for non sanctuary aura ID: @W')..PadString(sanc_bag1,16))
  AnsiNote(ColoursToANSI('    @Y  sanctuary aura ID:             @W')..PadString(sanc_aura2,16))
  AnsiNote(ColoursToANSI('    @Y  bag for sanctuary aura ID:     @W')..PadString(sanc_bag2,16))
  AnsiNote()
  AnsiNote(ColoursToANSI('@C{-o @Y----------------------------------------------------------------- @Co-}@w'))
end

function debugout(e)
  if env_debug then
    AnsiNote(logoshort..ColoursToANSI(' @Y[@ydebug@Y] @W'..e))
  end
end

function writeout(s)
  AnsiNote(ColoursToANSI('@w'..s..'@w'))
end

function OnPluginInstall()
  if env_active then
    AnsiNote(logo..ColoursToANSI('@w type @Yss help @wfor commands. @Yautospellup @wis @W[ @GON @W]'))
  else
    AnsiNote(logo..ColoursToANSI('@w type @Yss help @wfor commands. @Yautospellup @wis @W[ @ROFF @W]'))
  end
end

]]>
</script> 

</muclient>
